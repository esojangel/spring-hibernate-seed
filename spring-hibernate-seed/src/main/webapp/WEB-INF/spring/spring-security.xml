<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<beans:bean id="ipTokenBasedRememberMeServices"	class="com.jay.web.security.IPTokenBasedRememberMeServices">
		<beans:property name="key" value="spring-security-maven-seed_salt_jay_LYPAkFp.9XK2xO^sG5!jIvu*WCtUT:g8aQ_D" />
		<beans:property name="userDetailsService" ref="userService" />
		<beans:property name="parameter" value="_remember_me" />
		<beans:property name="cookieName" value="REMEMBER_ME" />
	</beans:bean>

	<global-method-security secured-annotations="enabled" />

	<http auto-config="true" use-expressions="true" access-denied-page="/forbidden">
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/admin"	access="hasRole('ROLE_USER') and fullyAuthenticated" />
		<intercept-url pattern="/XXX" access="hasRole('ROLE_XXX')" />
		<intercept-url pattern="/*" access="hasRole('ROLE_USER')" />
		<form-login login-page="/login" 
			default-target-url="/"
			authentication-failure-url="/login?error"
			username-parameter="username"
			password-parameter="password" />

		<!-- 604800s =7*24*3600 s = 1 week -->
		<!-- <remember-me key="spring-security-maven-seed_salt_jay_LYPAkFp.9XK2xO^sG5!jIvu*WCtUT:g8aQ_D" 
			token-validity-seconds="604800"/> -->
		<remember-me key="#{ipTokenBasedRememberMeServices.key}" services-ref="ipTokenBasedRememberMeServices" />
		<logout invalidate-session="true" logout-url="/logout" logout-success-url="/login?logout" />
		<!-- enable csrf protection -->
		<csrf />
	</http>

    <!-- 指定一个自定义的authentication-manager :customUserDetailsService --> 
<!--  	<authentication-manager>   -->
<!--         <authentication-provider user-service-ref="customUserDetailsService">   -->
<!--             <password-encoder ref="passwordEncoder" />   -->
<!--         </authentication-provider>   -->
<!--     </authentication-manager>  -->
    
    <!-- 对密码进行MD5编码 -->  
    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
    
     <!--   
        	通过 customUserDetailsService,Spring会控制用户的访问级别. 也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联.  
     -->  
<!--     <beans:bean id="customUserDetailsService" class="org.yzsoft.springmvcdemo.util.CustomUserDetailsService" />     -->
    
<!--     <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">   -->
<!--         <beans:property name="basename" value="classpath:messages" />   -->
<!--     </beans:bean>   -->
    <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver" /> 
    
	<authentication-manager>
		<authentication-provider>
			<user-service id="userService">
				<user name="jay" password="1" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
	<authentication-manager>
		<authentication-provider user-service-ref="userService" />
	</authentication-manager>

<!-- 	<beans:bean id="userService" class="com.jay.web.security.InMemoryChangePasswordDaoImpl"> -->
<!-- 		<beans:property name="userProperties"> -->
<!-- 			<beans:props> -->
<!-- 				<beans:prop key="jay">1,ROLE_USER</beans:prop> -->
<!-- 			</beans:props> -->
<!-- 		</beans:property> -->
<!-- 	</beans:bean> -->

</beans:beans>